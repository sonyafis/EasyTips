import random
import hashlib
from django.core.cache import cache
from django.utils import timezone
from datetime import timedelta
from .models import UserData, Session


class AuthService:
    @staticmethod
    def generate_verification_code():
        return str(random.randint(1000, 9999))

    @staticmethod
    def _hash_code(code: str) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç SHA256-—Ö—ç—à –∫–æ–¥–∞ (—Å—Ç—Ä–æ–∫–∞ –≤ hex)."""
        return hashlib.sha256(code.encode()).hexdigest()

    @staticmethod
    def send_verification_code(phone_number: str) -> bool:
        code = AuthService.generate_verification_code()

        # ‚úÖ –•—Ä–∞–Ω–∏–º —Ç–æ–ª—å–∫–æ —Ö—ç—à, –Ω–µ —Å–∞–º –∫–æ–¥
        code_hash = AuthService._hash_code(code)
        cache.set(f"verification_code_{phone_number}", code_hash, 300)

        # ‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ü–û–õ–ù–´–ô –∫–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–Ω–µ —Ö—ç—à!)
        # –ó–¥–µ—Å—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å SMS-—Å–µ—Ä–≤–∏—Å–æ–º (–∏–ª–∏ –ø–æ–∫–∞ print –¥–ª—è —Ç–µ—Å—Ç–∞)
        print(f"–ö–æ–¥ –¥–ª—è {phone_number}: {code}")
        return True

    @staticmethod
    def verify_code(phone_number: str, code: str) -> bool:
        stored_hash = cache.get(f"verification_code_{phone_number}")
        if not stored_hash:
            return False
        # ‚úÖ –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ö—ç—à –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ —Å —Ö—ç—à–µ–º –∏–∑ –∫–µ—à–∞
        return stored_hash == AuthService._hash_code(code)

    @staticmethod
    def get_or_create_user(phone_number):
        try:
            user_data = UserData.objects.get(phone_number=phone_number)
            created = False
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user_data.phone_number}")
        except UserData.DoesNotExist:
            user_data = UserData.objects.create(
                phone_number=phone_number,
                is_profile_complete=False  # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ –ø—Ä–æ—Ñ–∏–ª—è
            )
            created = True
            print(f"üë§ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_data.phone_number}")

        return user_data, created

    @staticmethod
    def create_session(user_data):
        expires_at = timezone.now() + timedelta(days=30)
        return Session.objects.create(user_data=user_data, expires_at=expires_at)
